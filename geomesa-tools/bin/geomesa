#! /usr/bin/env bash
#
# Copyright 2014 Commonwealth Computer Research, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

GEOMESA_OPTS="-Duser.timezone=UTC"
GEOMESA_DEBUG_OPTS="-Xmx8192m -XX:MaxPermSize=512m -XX:-UseGCOverheadLimit -Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=9898"
GEOMESA_CP=""
JAVA_LIBRARY_PATH=""

# Define GEOMESA_HOME and update the PATH if necessary.
if [ -z "$GEOMESA_HOME" ]; then
    SOURCE="${BASH_SOURCE[0]}"
    # resolve $SOURCE until the file is no longer a symlink
    while [ -h "${SOURCE}" ]; do
        bin="$( cd -P "$( dirname "${SOURCE}" )" && pwd )"
        SOURCE="$(readlink "${SOURCE}")"
        # if $SOURCE was a relative symlink, we need to resolve it relative to the path where
        # the symlink file was located
        [[ "${SOURCE}" != /* ]] && SOURCE="${bin}/${SOURCE}"
    done
    bin="$( cd -P "$( dirname "${SOURCE}" )" && cd ../ && pwd )"
    export GEOMESA_HOME="$bin"
    export PATH=${GEOMESA_HOME}/bin:$PATH
    echo >&2 "Warning: GEOMESA_HOME is not set, using $GEOMESA_HOME"
else
    echo >&2 "Using GEOMESA_HOME $GEOMESA_HOME"
fi

# GEOMESA paths, GEOMESA_LIB should live inside GEOMESA_HOME, but can be pointed elsewhere
if [ -z "$GEOMESA_LIB" ]; then
    GEOMESA_LIB=${GEOMESA_HOME}/lib
fi

# ACCUMULO paths, user can hard set these, or rely on this script to find set them via
if [ -n "$ACCUMULO_HOME" ]; then
    if [ -z "$ACCUMULO_LIB" -a -d "${ACCUMULO_HOME}/lib" ]; then
        ACCUMULO_LIB=${ACCUMULO_HOME}/lib
    fi
    if [ -z "$ACCUMULO_CONF_DIR" -a -d "${ACCUMULO_HOME}/conf" ]; then
        ACCUMULO_CONF_DIR=${ACCUMULO_HOME}/conf
    fi
fi

# HADOOP paths, user can hard set these, or rely on this script to find set them via HADOOP_HOME
if [ -n "$HADOOP_HOME" ]; then
    if [ -z "$HADOOP_LIB" -a -d "${HADOOP_HOME}/lib" ]; then
        HADOOP_LIB=${HADOOP_HOME}/lib
    fi
    if [ -z "$HADOOP_SHARE_DIR" -a -d "${HADOOP_HOME}/share/hadoop" ]; then
        HADOOP_SHARE_DIR=${HADOOP_HOME}/share/hadoop
    fi
    if [ -z "$HADOOP_COMMON" -a -d "${HADOOP_SHARE_DIR}/common" ]; then
        HADOOP_COMMON=${HADOOP_SHARE_DIR}/common
    fi
    if [ -z "$HADOOP_HDFS" -a -d "${HADOOP_SHARE_DIR}/hdfs" ]; then
        HADOOP_HDFS=${HADOOP_SHARE_DIR}/hdfs
    fi
    if [ -z "$HADOOP_MAPREDUCE" -a -d "${HADOOP_SHARE_DIR}/mapreduce" ]; then
        HADOOP_MAPREDUCE=${HADOOP_SHARE_DIR}/mapreduce
    fi
    if [ -z "$HADOOP_YARN" -a -d "${HADOOP_SHARE_DIR}/yarn" ]; then
        HADOOP_YARN=${HADOOP_SHARE_DIR}/yarn
    fi
    if [ -z "$HADOOP_CONF_DIR" -a -d "${HADOOP_HOME}/conf" ]; then
        HADOOP_CONF_DIR=${HADOOP_HOME}/conf
    fi
fi

# Warn user about missing environment variables
if [[ (-z "$ACCUMULO_HOME") || (-z "$HADOOP_HOME") ]]; then
    message="Warning: you have not set ACCUMULO_HOME and/or HADOOP_HOME as environment variables."
    message="${message}\nGeoMesa tools will not run without the appropriate Accumulo and Hadoop jars in the tools classpath."
    message="${message}\nPlease ensure that those jars are present in the classpath by running 'geomesa classpath' ."
    message="${message}\nTo take corrective action, please place the necessary jar files in the lib directory of geomesa-tools."
    echo >&2 ""
    echo -e >&2 "$message"
    echo >&2 ""
elif [[ (-z "$ACCUMULO_CONF_DIR") || (-z "$HADOOP_CONF_DIR")]]; then
    message="Warning: you have not set ACCUMULO_CONF_DIR and/or HADOOP_CONF_DIR as environment variables."
    message="${message}\nGeoMesa tools looks for these folders relative to the paths of the ACCUMULO_HOME and HADOOP_HOME environment variables."
    message="${message}\nGeoMesa tools can run without these variables set, however the user will be required to provide the additional instanceId and zookeepers parameters."
    message="${message}\nTo take corrective action, please set these environment variable to the appropriate locations"
    echo >&2 ""
    echo -e >&2 "$message"
    echo >&2 ""
fi

# Start constructing GEOMESA_CP (classpath)
# include geomesa first so that the correct log4j.properties is picked up
GHAdirs=("$GEOMESA_LIB" "$ACCUMULO_LIB" "$HADOOP_LIB")
for home in ${GHAdirs[*]}; do
  if [ -n "$home" ]; then
    for jar in $(find ${home} -name "*.jar"); do
      GEOMESA_CP="$GEOMESA_CP:$jar"
    done
    if [ -d "$home/native" ]; then
      if [ -z "$JAVA_LIBRARY_PATH" ]; then
        JAVA_LIBRARY_PATH="$home/native"
      else
        JAVA_LIBRARY_PATH="$home/native:$JAVA_LIBRARY_PATH"
      fi
    fi
  fi
done

#Get the hadoop jars, ignoring jars with names containing slf4j and test
hadoopDirs=("$HADOOP_COMMON" "$HADOOP_MAPREDUCE" "$HADOOP_YARN" "$HADOOP_HDFS")
for home in ${hadoopDirs[*]}; do
  if [[ (-n "$home") && (-d ${home}) ]]; then
    for jar in $(find ${home} -name "*.jar"); do
      if [[ ("$jar" != *"test"*) && ("$jar" != *"slf4j"*) ]]; then
        GEOMESA_CP="$GEOMESA_CP:$jar"
      fi
    done
  else
    echo >&2  "Could not find directory $home. Either check to see that this directory exists and has
      the appropriate Hadoop JARs, or edit this script directly to specify an alternate location for the
      Hadoop JARs."
  fi
done

# We explicitly add geomesa-tools as the first jar to ensure the correct log4j properties file is used.
CLASSPATH="${GEOMESA_CP}:${ACCUMULO_CONF_DIR}:${HADOOP_CONF_DIR}"
if [ -n "$JAVA_LIBRARY_PATH" ]; then
  GEOMESA_OPTS="$GEOMESA_OPTS,java.library.path=$JAVA_LIBRARY_PATH"
  export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$JAVA_LIBRARY_PATH"
fi

# Geomesa tools setup completed, below we parse user arguments
#
# configure runs the geomesa configuration, sets both the GEOMESA_HOME and PATH vars
# classpath prints the class path, ie list of jars we are using
# else is running actual commands in the tools

if  [[ $1 = configure ]]; then
    echo "To persist the configuration please update your bashrc file to include: "
    echo "export GEOMESA_HOME="$GEOMESA_HOME""
    echo "export PATH=\${GEOMESA_HOME}/bin:\$PATH"
elif [[ $1 = classpath ]]; then
    for element in ${CLASSPATH//:/ } ; do
        echo ${element}
    done
else
    if [[ $1 = debug ]]; then
        GEOMESA_OPTS="$GEOMESA_OPTS $GEOMESA_DEBUG_OPTS"
        shift 1
    fi
    java ${GEOMESA_OPTS} -cp ${CLASSPATH} org.locationtech.geomesa.tools.Runner "$@"
fi
